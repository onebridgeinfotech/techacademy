{"ast":null,"code":"import React from'react';import{Navigate,useLocation}from'react-router-dom';import{authService}from'../services/authService';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,requireProfile=false,requireAssessment=false}=_ref;const location=useLocation();const user=authService.getCurrentUser();// Check if user is authenticated\nif(!user){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{from:location},replace:true});}// Check if profile is required and completed\nif(requireProfile&&!user.profileComplete){return/*#__PURE__*/_jsx(Navigate,{to:\"/signup?step=2\",replace:true});}// Check if assessment is required and not completed\nif(requireAssessment&&user.assessmentCompleted){return/*#__PURE__*/_jsx(Navigate,{to:\"/results\",replace:true});}return/*#__PURE__*/_jsx(_Fragment,{children:children});};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useLocation","authService","jsx","_jsx","Fragment","_Fragment","ProtectedRoute","_ref","children","requireProfile","requireAssessment","location","user","getCurrentUser","to","state","from","replace","profileComplete","assessmentCompleted"],"sources":["C:/Users/UdayaCharagundla/OneDrive - kyndryl/Desktop/golive/golive-cursor/techacademy/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { authService } from '../services/authService';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  requireProfile?: boolean;\r\n  requireAssessment?: boolean;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \r\n  children, \r\n  requireProfile = false, \r\n  requireAssessment = false \r\n}) => {\r\n  const location = useLocation();\r\n  const user = authService.getCurrentUser();\r\n\r\n  // Check if user is authenticated\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  // Check if profile is required and completed\r\n  if (requireProfile && !user.profileComplete) {\r\n    return <Navigate to=\"/signup?step=2\" replace />;\r\n  }\r\n\r\n  // Check if assessment is required and not completed\r\n  if (requireAssessment && user.assessmentCompleted) {\r\n    return <Navigate to=\"/results\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,WAAW,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAQtD,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAIhD,IAJiD,CACrDC,QAAQ,CACRC,cAAc,CAAG,KAAK,CACtBC,iBAAiB,CAAG,KACtB,CAAC,CAAAH,IAAA,CACC,KAAM,CAAAI,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAY,IAAI,CAAGX,WAAW,CAACY,cAAc,CAAC,CAAC,CAEzC;AACA,GAAI,CAACD,IAAI,CAAE,CACT,mBAAOT,IAAA,CAACJ,QAAQ,EAACe,EAAE,CAAC,QAAQ,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAEL,QAAS,CAAE,CAACM,OAAO,MAAE,CAAC,CACpE,CAEA;AACA,GAAIR,cAAc,EAAI,CAACG,IAAI,CAACM,eAAe,CAAE,CAC3C,mBAAOf,IAAA,CAACJ,QAAQ,EAACe,EAAE,CAAC,gBAAgB,CAACG,OAAO,MAAE,CAAC,CACjD,CAEA;AACA,GAAIP,iBAAiB,EAAIE,IAAI,CAACO,mBAAmB,CAAE,CACjD,mBAAOhB,IAAA,CAACJ,QAAQ,EAACe,EAAE,CAAC,UAAU,CAACG,OAAO,MAAE,CAAC,CAC3C,CAEA,mBAAOd,IAAA,CAAAE,SAAA,EAAAG,QAAA,CAAGA,QAAQ,CAAG,CAAC,CACxB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}